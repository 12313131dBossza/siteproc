import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from 'next/link'
import { Suspense } from 'react'
import ToastProvider from '@/components/providers/ToastProvider'

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
  <ToastProvider />
  <link rel="manifest" href="/manifest.json" />
        <meta name="theme-color" content="#000000" />
        <nav className="w-full p-3 flex justify-between items-center border-b border-black/10 dark:border-white/10">
          <Link href="/" className="font-semibold">siteproc</Link>
          <Suspense>
            {/* Offline badge placeholder injected by client component */}
            <span id="offline-badge" className="text-sm bg-yellow-200 text-yellow-900 px-2 py-1 rounded hidden"/>
          </Suspense>
        </nav>
        {children}
        <script dangerouslySetInnerHTML={{ __html: `
          if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('/sw/sw.js').catch(()=>{})
          }
          window.addEventListener('offline-queue-changed', (e) => {
            const el = document.getElementById('offline-badge');
            // Read CustomEvent.detail without TS casts (this is plain JS at runtime)
            const n = e && typeof e === 'object' && 'detail' in e ? (e).detail : 0;
            if (!el) return; if (n > 0) { el.textContent = 'Sync pending ('+n+')'; el.classList.remove('hidden'); } else { el.classList.add('hidden'); }
          });
        ` }} />
      </body>
    </html>
  );
}
